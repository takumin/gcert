name: CI
on:
  push:
    paths:
    # Go
    - '**.go'
    - 'go.mod'
    - 'go.sum'
    - '.goreleaser.yml'
    # Protocol Buffers
    - '**.proto'
    - 'buf.yaml'
    - 'buf.gen.yaml'
    - 'buf.work.yaml'
    # GitHub Actions
    - '.github/workflows/ci.yml'
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build:
    strategy:
      matrix:
        os:
        - ubuntu
        - windows
        - macos
        go:
        - '1.13'
        - '1.14'
        - '1.15'
        - '1.16'
        - '1.17'
    env:
      RELEASE_OS_DISTRIB: ubuntu
      RELEASE_GO_VERSION: '1.17'
    runs-on: ${{ matrix.os }}-latest
    name: Go ${{ matrix.go }} (${{ matrix.os }})
    defaults:
      run:
        shell: bash
    steps:
    ################################################################################
    # Checkout
    ################################################################################
    - name: Checkout (Depth 1)
      if: ${{ startsWith(github.ref, 'refs/tags/') == false }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Checkout (Depth 0)
      if: ${{ startsWith(github.ref, 'refs/tags/') == true }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    ################################################################################
    # Setup
    ################################################################################
    - name: Setup Go (${{ matrix.go }})
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - name: Setup Protoc # Require BufBuild
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ github.token }}
    - name: Setup BufBuild # Require Go 1.16
      uses: bufbuild/buf-setup-action@v0.7.0
      with:
        github_token: ${{ github.token }}
    - name: Setup GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        install-only: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    ################################################################################
    # Cache
    ################################################################################
    - name: Go Cache Directory
      id: go-cache-paths
      run: |
        GOCACHE="$(go env GOCACHE)"
        GOMODCACHE="$(go env GOMODCACHE)"
        test -z "${GOCACHE}" && GOCACHE="${HOME}/.cache/go-build"
        test -z "${GOMODCACHE}" && GOMODCACHE="$(go env GOPATH)/pkg/mod"
        echo "::set-output name=go-build::${GOCACHE}"
        echo "::set-output name=go-mod::${GOMODCACHE}"
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-${{ matrix.go }}-build-${{ hashFiles('**/go.sum') }}
    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-${{ matrix.go }}-mod-${{ hashFiles('**/go.sum') }}
    ################################################################################
    # Go
    ################################################################################
    - name: Go Mod Download
      run: go mod download
    - name: Go Mod Tidy
      run: go mod tidy
    - name: Go Tools
      run: make tools
    - name: Go Vet
      run: make vet
    - name: Go Lint
      run: make lint
    - name: Go Test
      run: make test
    - name: Go Build
      run: make build
    ################################################################################
    # GoReleaser
    ################################################################################
    - name: GoReleaser (${{ startsWith(github.ref, 'refs/tags/') && 'Release' || 'Snapshot' }})
      if: ${{ matrix.os == env.RELEASE_OS_DISTRIB && matrix.go == env.RELEASE_GO_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |-
        make ${{ startsWith(github.ref, 'refs/tags/') && 'release' || 'snapshot' }}
